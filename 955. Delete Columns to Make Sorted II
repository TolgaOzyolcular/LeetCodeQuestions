class Solution {
    public int minDeletionSize(String[] A) {

        int deletionCount = 0;

        // cur : all rows we have written
        // For example, with A = ["abc","def","ghi"] we might have
        // cur = ["ab", "de", "gh"].
        String[] current = new String[A.length];
        for (int j = 0; j < A[0].length(); ++j) {
            // cur2 : What we potentially can write, including the
            //        newest column col = [A[i][j] for i]
            // Eg. if cur = ["ab","de","gh"] and col = ("c","f","i"),
            // then cur2 = ["abc","def","ghi"].
            String[] current2 = Arrays.copyOf(current, A.length);
            
            for (int i = 0; i < A.length; ++i)
                current2[i] += A[i].charAt(j);

            if (isSorted(current2))
                current = current2;
            else
                deletionCount++;
            
            System.out.println(Arrays.toString(current));
            System.out.println(Arrays.toString(current2));
        }

        return deletionCount;
    }

    public boolean isSorted(String[] A) {
        for (int i = 0; i < A.length - 1; ++i)
            if (A[i].compareTo(A[i+1]) > 0)
                return false;

        return true;
    }
}
