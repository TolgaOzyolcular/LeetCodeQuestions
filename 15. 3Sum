class Solution {
   
    /*
        a + b + c = 0 -> a + b = -c
       
        - Check if nums length is minimum 3.
        - Sort array from smallest value to largest ([-4, -1, -1, 0, 1, 2])
        - Start from c being first array index.
        - have two index's i & j starting from both ends.
        - if result of nums[i] + nums[j] is less than c, i++. Else, j--.
        - run while i < j.
        - if nothing found, then change c. Else, add to list.
    */
   
    public List<List<Integer>> threeSum(int[] nums) {      
        HashSet<List<Integer>> triplets = new HashSet<>();
       
        if(nums.length < 3)
            return new ArrayList<>(triplets);
       
        Arrays.sort(nums);
       
        for(int i = 0; i < nums.length-1; i++){
           
            int a = i+1;
            int b = nums.length-1;
            int c = nums[i] * -1;
           
            while(a < b){
                if(nums[a] + nums[b] > c)
                    b--;
                else if(nums[a] + nums[b] < c)
                    a++;
                else{
                    List<Integer> triplet = new ArrayList<Integer>();
                    triplet.add(nums[i]);
                    triplet.add(nums[a]);
                    triplet.add(nums[b]);                   
 
                    triplets.add(triplet);
 
                    a++;
                    b--;
                }                                                                                      
            }
                       
        }
       
        return new ArrayList<>(triplets);  
    }
}
