class Solution {
    public boolean exist(char[][] board, String word) {        
        List<Character> queue = new LinkedList<Character>();
        boolean[][] visited = new boolean[board.length][board[0].length];

        //initialize visited array
        initializeVisited(visited);

        for(int i = 0; i < board.length; i++){
            for(int j = 0; j < board[0].length; j++){
                if(word.charAt(0) == board[i][j]){
                    if(BFS(visited, board, i, j, word, 1))
                        return true;
                    else
                        initializeVisited(visited);
                }                    
            }
        }        
        
        return false;        
    }
    
    public void initializeVisited(boolean[][] visited){
        for(int i = 0; i < visited.length; i++){
            for(int j = 0; j < visited[0].length; j++){
                visited[i][j] = false;
            }
        }
    }
    
    public boolean BFS(boolean[][] visited, char[][] board, int i, int j, String word, int wordIndex){        
        
        if(wordIndex == word.length()){
            System.out.println(true);
            return true;
        }
        
        visited[i][j] = true;       
        char letter = word.charAt(wordIndex);
        
        if(i < board.length-1){ //Down
            if(board[i+1][j] == letter && visited[i+1][j] == false){
                if(BFS(visited, board, i+1, j, word, wordIndex+1))
                    return true; 
            }
        }
        
        if(j < board[0].length-1){ //Right
            if(board[i][j+1] == letter && visited[i][j+1] == false){
                if(BFS(visited, board, i, j+1, word, wordIndex+1))
                    return true;                
            }                
        }
        
        if(i > 0){ //Up
            if(board[i-1][j] == letter && visited[i-1][j] == false){
                if(BFS(visited, board, i-1, j, word, wordIndex+1))
                    return true;
            }            
        }
        
        if(j > 0){ //Left
            if(board[i][j-1] == letter && visited[i][j-1] == false){
                if(BFS(visited, board, i, j-1, word, wordIndex+1))
                    return true;
            }
        }
        
        visited[i][j] = false;
        
        return false;
        
    }
}
