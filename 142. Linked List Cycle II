/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
        ListNode tortoise = head;
        ListNode hare = head;
        
        if(head == null)
            return null;
        
        while(tortoise != null && hare != null){            
            try{
                tortoise = tortoise.next;
                hare = hare.next.next;
            }            
            catch(NullPointerException e){
                return null;
            }
            
            
            if(tortoise == hare){
                
                tortoise = head;
                while(tortoise != hare){
                    tortoise = tortoise.next;
                    hare = hare.next;
                }
                
                return tortoise;                
            }

        }
        
        return null;
    }
}
